/*
 * This file is part of SQL Workbench/J, https://www.sql-workbench.eu
 *
 * Copyright 2002-2023 Thomas Kellerer
 *
 * Licensed under a modified Apache License, Version 2.0
 * that restricts the use for certain governments.
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at.
 *
 *     https://www.sql-workbench.eu/manual/license.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * To contact the author please send an email to: support@sql-workbench.eu
 *
 */
package workbench.gui.dialogs.export;

import workbench.resource.ResourceMgr;
import workbench.resource.Settings;

/**
 *
 * @author  Thomas Kellerer
 */
public class HtmlOptionsPanel
  extends javax.swing.JPanel
  implements HtmlOptions
{
  public HtmlOptionsPanel()
  {
    super();
    initComponents();
  }

  public void saveSettings(String type)
  {
    Settings s = Settings.getInstance();
    s.setProperty("workbench." + type + ".html.createfullpage", this.getCreateFullPage());
    s.setProperty("workbench." + type + ".html.escape", this.getEscapeHtml());
    s.setProperty("workbench." + type + ".html.pagetitle", this.getPageTitle());
  }

  public void restoreSettings(String type)
  {
    Settings s = Settings.getInstance();
    this.setCreateFullPage(s.getBoolProperty("workbench." + type + ".html.createfullpage"));
    this.setEscapeHtml(s.getBoolProperty("workbench." + type + ".html.escape"));
    this.setPageTitle(s.getProperty("workbench." + type + ".html.pagetitle", ""));
  }

  @Override
  public boolean getIncludeColumnComments()
  {
    return this.includeComments.isSelected();
  }

  @Override
  public void setIncludeColumnComments(boolean flag)
  {
    this.includeComments.setSelected(flag);
  }

  @Override
  public boolean getCreateFullPage()
  {
    return this.fullPage.isSelected();
  }

  @Override
  public boolean getEscapeHtml()
  {
    return escapeHtml.isSelected();
  }

  @Override
  public String getPageTitle()
  {
    return pageTitle.getText();
  }

  @Override
  public void setCreateFullPage(boolean flag)
  {
    fullPage.setSelected(flag);
  }

  @Override
  public void setEscapeHtml(boolean flag)
  {
    escapeHtml.setSelected(flag);
  }

  @Override
  public void setPageTitle(String title)
  {
    pageTitle.setText(title);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    pageTitleLabel = new javax.swing.JLabel();
    pageTitle = new javax.swing.JTextField();
    fullPage = new javax.swing.JCheckBox();
    escapeHtml = new javax.swing.JCheckBox();
    includeComments = new javax.swing.JCheckBox();

    setLayout(new java.awt.GridBagLayout());

    pageTitleLabel.setText(ResourceMgr.getString("LblExportHtmlPageTitle")); // NOI18N
    pageTitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
    add(pageTitleLabel, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 4);
    add(pageTitle, gridBagConstraints);

    fullPage.setText(ResourceMgr.getString("LblExportFullHtml")); // NOI18N
    fullPage.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 3, 0, 0);
    add(fullPage, gridBagConstraints);

    escapeHtml.setText(ResourceMgr.getString("LblExportEscapeHtml")); // NOI18N
    escapeHtml.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 3, 0, 0);
    add(escapeHtml, gridBagConstraints);

    includeComments.setText(ResourceMgr.getString("LblExportIncludeComments")); // NOI18N
    includeComments.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 3, 0, 0);
    add(includeComments, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox escapeHtml;
  private javax.swing.JCheckBox fullPage;
  private javax.swing.JCheckBox includeComments;
  private javax.swing.JTextField pageTitle;
  private javax.swing.JLabel pageTitleLabel;
  // End of variables declaration//GEN-END:variables

}
